RFC 8341, titled "Network Configuration Access Control Model," published in March 2018, is a crucial IETF standard that defines a comprehensive and standardized access control model for network devices managed using the NETCONF and RESTCONF protocols. It obsoletes RFC 6536 and incorporates updates and clarifications to align with newer standards and practices.
The fundamental problem it solves is the need for fine-grained security when multiple users or automated systems interact with network devices. Without such a model, any user with basic authentication could potentially view or modify any configuration, or execute any operation, leading to significant security vulnerabilities and operational risks.
Here's a detailed summary of its key aspects:
1. Purpose and Scope:
 * Standardized Access Control: The primary goal is to provide a uniform and interoperable mechanism for controlling access to network device capabilities through NETCONF and RESTCONF. This ensures that different vendors' devices can implement access control in a consistent manner.
 * Secure Environment: It aims to establish a secure and structured environment for network management, preventing unauthorized access and modifications.
 * Multi-Protocol Support: Crucially, it extends the access control model to cover both NETCONF (XML-based) and RESTCONF (HTTP/JSON-based) protocols, which access data models defined in YANG.
2. Core Concepts of the NACM (NETCONF Access Control Model):
RFC 8341 formalizes the NACM, which is built upon the following principles:
 * Group-Based Authorization: Access is typically granted to "groups" of users, rather than individual users. Users are assigned to one or more groups, and these groups are then linked to access rules. This simplifies management.
 * Rule-List Driven: Access control is enforced by evaluating a set of ordered "rule-lists." Each rule-list is associated with one or more groups.
 * Fine-Grained Rules: Within each rule-list, individual "rules" define specific permissions for particular network elements. A rule specifies:
   * Module Name: The YANG module to which the rule applies.
   * Access Type: Whether the rule applies to RPCs, data nodes, or notifications.
   * Element Name: The specific RPC name, data node path (using YANG instance-identifiers), or notification name.
   * Permissions: For data nodes, permissions include read, create, delete, and update. For RPCs and notifications, the permission is exec.
   * Action: Whether to permit or deny the access if the rule matches.
 * Default Deny Principle: A cornerstone of the NACM is the "default deny" behavior. If a request does not explicitly match any "permit" rule, it is implicitly denied. This is a secure-by-default approach.
 * Hierarchical Evaluation: When a request is received, the system evaluates the rules in a defined order (typically by their appearance in the configuration or an explicit priority). The first matching rule determines the outcome.
3. Access Control for Specific NETCONF/RESTCONF Elements:
The RFC details how NACM applies to:
 * RPC Operations and Actions: Controls which <rpc> operations (standard NETCONF operations like <get>, <edit-config>, as well as custom operations defined as rpc or action statements in YANG modules) a user is authorized to execute.
 * Data Nodes (Configuration and State): Provides granular control over specific parts of the device's data tree. This is done by specifying YANG instance-identifiers, allowing permissions to be applied down to individual list entries, containers, or leaf nodes.
   * read: Allows viewing the data.
   * create: Allows adding new instances of data.
   * delete: Allows removing existing data instances.
   * update: Allows modifying existing data.
 * Notifications: Controls which event notifications (published by the device) a user is authorized to subscribe to and receive.
4. Key Features of the NACM (as defined in RFC 8341):
 * Independent Control: Allows separate and distinct control over RPCs, actions, data, and notifications.
 * Emergency Recovery Session: Defines a "recovery user" or "superuser" concept (though implementation details are outside the scope). This is a critical "break-glass" mechanism, allowing an administrator to bypass all NACM enforcement to fix a misconfiguration that might otherwise lock out all legitimate users.
 * Monitoring: The model includes mechanisms to monitor and track the number of denied protocol operation requests and denied datastore write requests, providing valuable security auditing information.
 * YANG Security Tagging (nacm:default-deny-write): This is a new feature in YANG 1.1 that RFC 8341 leverages. It allows a YANG module designer to explicitly mark certain data nodes as "default-deny-write," meaning that writing to them always requires an explicit "permit" rule, regardless of other default settings. This enhances security for sensitive configuration points.
 * Global Enforcement Controls: Includes global switches to enable/disable NACM enforcement entirely, as well as read-default and write-default settings (permit/deny) that apply if no specific rule matches.
 * YANG Module Definition: The RFC includes the formal YANG module (ietf-netconf-acm.yang) that precisely defines the data structures used to configure and manage the NACM itself. This module makes the access control system machine-readable and programmable.
5. Relationship to Other Standards:
 * Obsoletes RFC 6536: RFC 8341 is a direct successor, updating the previous version to align with YANG 1.1 and other advancements.
 * Relies on YANG (RFC 7950): The entire model is defined using the YANG data modeling language.
 * Integrates with NETCONF (RFC 6241) and RESTCONF (RFC 8040): It specifies how the access control rules are applied within the message processing flows of these two network configuration protocols.
In conclusion, RFC 8341 is a foundational standard for securing modern network device management. By providing a standardized, flexible, and granular access control model based on YANG, it enables network operators to implement robust security policies for their NETCONF and RESTCONF interfaces, crucial for multi-vendor environments and the increasing automation of network operations.


Yes, there is!
RFC 6536, "Network Configuration Protocol (NETCONF) Access Control Model," has been obsoleted by RFC 8341, titled "Network Configuration Access Control Model."
RFC 8341 was published in March 2018 and largely updates RFC 6536 to align with new developments in the NETCONF ecosystem, particularly:
 * YANG 1.1: The updated YANG data modeling language introduced new features (like action statements and enhanced notification handling) that needed to be accommodated in the access control model.
 * RESTCONF: RFC 8341 explicitly extends the access control model to cover the RESTCONF protocol as well, which is an HTTP-based protocol for accessing YANG-defined data.
 * Clarifications and Improvements: It includes various clarifications and minor improvements to the access control logic and the YANG module itself.
So, while RFC 6536 laid the foundational work, RFC 8341 is the current and authoritative standard for the NETCONF Access Control Model (NACM).


RFC 6536, titled "Network Configuration Protocol (NETCONF) Access Control Model," published in March 2012, defines a standardized access control model for the NETCONF protocol. This RFC was later obsoleted by RFC 8341, which provides an updated version of the same access control model, primarily to align with YANG 1.1. However, understanding RFC 6536 is crucial as it laid the groundwork.
The core problem RFC 6536 addresses is the need for fine-grained control over what specific users or management applications can do when interacting with network devices via NETCONF. Without such control, any authorized NETCONF client could potentially access or modify any configuration data or execute any operation on a device, posing a significant security risk.
Here's a detailed summary of its key aspects:
1. Purpose and Scope:
 * Standardized Access Control: The primary goal is to provide a standardized mechanism for restricting NETCONF protocol access. This means defining how to limit users to a pre-configured subset of all available NETCONF operations and content (configuration and state data).
 * Secure Operating Environment: It aims to promote a structured and secure environment for network configuration interfaces, fostering human usability and multi-vendor interoperability.
 * XML and YANG based: The access control model itself is defined using YANG (Yet Another Next Generation), a data modeling language, and is designed to work with NETCONF's XML-based message exchange.
2. Core Components of the Access Control Model:
RFC 6536 introduces a hierarchical and rule-based access control system:
 * Users/Groups: Access is typically granted to specific users or groups of users.
 * Rules: Access control is based on a set of rules, where each rule defines:
   * What is being accessed: This can be an RPC operation, a notification, or specific data nodes (configuration or state data) within the device's data models.
   * Who can access it: This links to users or groups.
   * What kind of access: Permissions are defined for reading, creating, deleting, or updating data, and for executing RPCs or receiving notifications.
 * Prioritization: Rules are processed in a defined order (e.g., based on their order in the configuration or a priority value) to determine the effective permissions.
 * Default Deny: A fundamental security principle is "default deny." If no specific rule grants access, access is denied.
3. Access Control for Different NETCONF Elements:
The RFC defines how access control applies to various NETCONF elements:
 * RPC Operations: Controls which <rpc> operations (e.g., <get>, <edit-config>, <copy-config>, <delete-config>, <lock>, <unlock>, <commit>, <discard-changes>, and custom RPCs defined in YANG) a user can execute.
 * Data Nodes (Configuration and State): Provides fine-grained control over specific nodes in the device's configuration and state data trees. This is done using YANG's instance-identifiers, allowing control down to specific list entries or leaf nodes. Permissions include:
   * read: Allows viewing the data.
   * create: Allows creating new instances of data (e.g., adding a new interface).
   * delete: Allows deleting existing data instances.
   * update: Allows modifying existing data.
 * Notifications: Controls which notifications a user is authorized to subscribe to and receive.
4. Key Features of the Access Control Model (NACM - NETCONF Access Control Model):
 * Independent Control: Allows independent control of RPC, action, data, and notification access.
 * Emergency Recovery Session: Supports the concept of an emergency recovery session, which bypasses all access control enforcement to allow an administrator to initialize or repair the NACM configuration itself. This is a critical "break-glass" mechanism.
 * Familiar Permissions: Uses a simple and familiar set of datastore permissions (read, create, delete, update, exec).
 * Monitoring: Allows monitoring of denied protocol operation requests and denied datastore write requests.
 * Unconstrained YANG Instance-Identifiers: Uses simple, unconstrained YANG instance-identifiers to configure access control rules for specific data nodes, providing flexibility.
 * Default Behavior: Defines default access behaviors, including the concept of "default-deny-write" for sensitive data nodes, where explicit permission is always required for writing.
5. YANG Data Model:
RFC 6536 includes the YANG module for the NETCONF Access Control Model (NACM). This module defines the data structures that NETCONF servers and clients use to configure and manage the access control rules. This YANG module is the machine-readable specification of the access control model.
6. NETCONF Protocol Message Processing:
The RFC describes how the access control model integrates with the NETCONF message processing flow. When a NETCONF operation is received, the server first authenticates the user and then applies the NACM rules to authorize the requested operation and data access.
7. Obsoleted by RFC 8341:
As mentioned, RFC 6536 has been obsoleted by RFC 8341. The updates in RFC 8341 primarily address:
 * Alignment with YANG 1.1, which introduced new features like action and enhanced notification handling.
 * Clarifications and minor improvements to the access control logic.
 * Explicit mention of applying the model to RESTCONF as well.
In essence, RFC 6536 (and its successor RFC 8341) provides the foundational framework for securing NETCONF-enabled network devices by defining a standard, granular, and programmable access control model. This allows network administrators to precisely define who can do what on their devices, significantly enhancing security and operational control.




